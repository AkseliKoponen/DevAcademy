@page "/"

<PageTitle>HSL City Bike Trips 2021</PageTitle>
@if (DBManager.totalEntryCount <= 0)
{
	<h3>Viewing Bike Trips @GetPageString().</h3>
}
else
{
		<h3>Viewing Bike Trips @GetPageString() (of @DBManager.totalEntryCount total).</h3>
}
@if (displayedTrips == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<p>
		@if (currentPage > 0)
		{
			<button @onclick="()=>ChangePage(-1)">Previous Page</button>
		}
		else
		{
			<button type="button" disabled>Previous Page</button>
		}
		<button @onclick="()=>ChangePage(1)">Next Page</button>
	</p>
	<table class="table">
		<thead>
			<tr>
				@if (orderIndex != 0)
				{
					<th><button  @onclick="()=>OrderBy(0)">@buttonNames[0]</button></th>
				}
				else
				{
					<th><button  @onclick="()=>OrderBy(0)"><b>@buttonNames[0]</b></button></th>
				}
				@if (orderIndex != 1)
				{
					<th><button  @onclick="()=>OrderBy(1)">@buttonNames[1]</button></th>
				}
				else
				{
					<th><button  @onclick="()=>OrderBy(1)"><b>@buttonNames[1]</b></button></th>
				}
				@if (orderIndex != 2)
				{
					<th><button  @onclick="()=>OrderBy(2)">@buttonNames[2]</button></th>
				}
				else
				{
					<th><button  @onclick="()=>OrderBy(2)"><b>@buttonNames[2]</b></button></th>
				}
				@if (orderIndex != 3)
				{
					<th><button  @onclick="()=>OrderBy(3)">@buttonNames[3]</button></th>
				}
				else
				{
					<th><button  @onclick="()=>OrderBy(3)"><b>@buttonNames[3]</b></button></th>
				}
			</tr>
		</thead>
		<tbody>
			@foreach (var trip in displayedTrips)
			{
				<tr>
					<td>@trip.deptStationName</td>
					<td>@trip.retStationName</td>
					<td>@trip.GetDistanceKm()</td>
					<td>@trip.GetDurationMin()</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private List<Trip>? displayedTrips;
	private int currentPage = 0;
	private int pageDisplayCount = 20;
	List<string> buttonNames = new List<string> { "Departure Station", "Return Station", "Distance (km)", "Duration (min)" };
	protected override async Task OnInitializedAsync()
	{
		if (displayedTrips != null)
			return;
		ChangePage(0);
	}
	void ChangePage(int i)
	{
		currentPage = Math.Clamp(i + currentPage, 0, 1000); 
		DBManager.Limit(pageDisplayCount, currentPage);
		displayedTrips = DBManager.LoadTrips();
	}
	string GetPageString()
	{
		return ((currentPage * pageDisplayCount)+1) + " - " + ((currentPage+1) * pageDisplayCount);
	}
	int orderIndex = -1;
	void OrderBy(int index)
	{
		ChangePage(-currentPage);
		Console.WriteLine("click!");
		displayedTrips = new List<Trip>();
		buttonNames = new List<string> { "Departure Station", "Return Station", "Distance (km)", "Duration (min)" };
		List<string> order;
		switch (index)
		{
			default:
			case 0:
				order = new List<string> { "deptStationName"};
				break;
			case 1:
				order = new List<string> { "retStationName"};
				break;
			case 2:
				order = new List<string> { "distance"};
				break;
			case 3:
				order = new List<string> { "duration"};
				break;
		}
		orderIndex = index;
		DBManager.OrderBy(order);
		displayedTrips = DBManager.LoadTrips();
	}

}