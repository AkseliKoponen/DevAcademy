@page "/"
<style>
	.toggleOff {
border: 2px solid black;
  background-color: white;
border-color: #e7e7e7;
  color: black;
  padding: 14px 28px;
  font-size: 16px;
  cursor: pointer;
}
.toggleOff:hover{
	background: #e7e7e7
}	
.toggleOn {
border: 2px solid black;
  background-color: #e7e7e7;
	border-color: #e7e7e7;
  color: black;
  padding: 14px 40px;
  font-size: 16px;
  cursor: pointer;
}
.toggleOn:hover{
	background: white
}
.search{
border: 1px
background-color: white;
color:black;
}
.search:hover{
	background: #e7e7e7
}	
</style>


<PageTitle>HSL City Bike Trips 2021</PageTitle>
@if (DBManager.matchCount <= 0)
{
	<h3>Viewing Bike Trips @GetPageString().</h3>
}
else
{
		<h3>Viewing Bike Trips @GetPageString() (of @DBManager.matchCount total).</h3>
}

@if (displayedTrips == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<p>
		@if (currentPage > 0)
		{
			<button @onclick="()=>ChangePage(-1)">Previous Page</button>
		}
		else
		{
			<button type="button" disabled>Previous Page</button>
		}
		<button @onclick="()=>ChangePage(1)">Next Page</button>
			
		</p>
	<table class="table">
			<tr>
				<td>
						<InputText id="name" placeholder="Search Station Name..." @bind-Value="deptName"/>
						<button class="search" @onclick='()=>SetSearch("deptStationName",deptName)'><i class="oi oi-magnifying-glass"></i></button>
				</td>
					<td>
						<InputText id="name" placeholder="Search Station Name..." @bind-Value="retName"/>
						<button class="search" @onclick='()=>SetSearch("retStationName",retName)'><i class="oi oi-magnifying-glass"></i></button>
					</td>
					<td>
							<InputText id="name" placeholder="Search Distance..." @bind-Value="distance"/>
							<button class="search" @onclick='()=>SetSearch("distance",distance)'><i class="oi oi-magnifying-glass"></i></button>
					</td>
						<td>
							<InputText id="name" placeholder="Search Duration..." @bind-Value="duration"/>
							<button class="search" @onclick='()=>SetSearch("duration",duration)'><i class="oi oi-magnifying-glass"></i></button>
					</td>
		</tr>
		<thead>
			<tr>
				@if (orderIndex != 0)
				{
					<th><button class="toggleOff" @onclick="()=>OrderBy(0)">@buttonNames[0]</button></th>
				}
				else
				{
							<th><button class="toggleOn" @onclick="()=>OrderBy(0)"><b>@buttonNames[0]</b></button></th>
				}
				@if (orderIndex != 1)
				{
							<th><button class="toggleOff" @onclick="()=>OrderBy(1)">@buttonNames[1]</button></th>
				}
				else
				{
							<th><button class="toggleOn" @onclick="()=>OrderBy(1)"><b>@buttonNames[1]</b></button></th>
				}
				@if (orderIndex != 2)
				{
							<th><button class="toggleOff" @onclick="()=>OrderBy(2)">@buttonNames[2]</button></th>
				}
				else
				{
							<th><button class="toggleOn" @onclick="()=>OrderBy(2)"><b>@buttonNames[2]</b></button></th>
				}
				@if (orderIndex != 3)
				{
							<th><button class="toggleOff" @onclick="()=>OrderBy(3)">@buttonNames[3]</button></th>
				}
				else
				{
							<th><button class="toggleOn" @onclick="()=>OrderBy(3)"><b>@buttonNames[3]</b></button></th>
				}
			</tr>
		</thead>
		<tbody>
			@foreach (var trip in displayedTrips)
			{
				<tr>
					<td>@trip.deptStationName</td>
					<td>@trip.retStationName</td>
					<td>@trip.GetDistanceKm()</td>
					<td>@trip.GetDurationMin()</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	void SetSearch(string column, string criteria)
	{
		if (criteria==null || criteria.Length==0)
		{
			DBManager.RemoveFilterColumn(column);
			displayedTrips = DBManager.LoadTrips();
			return;
		}
		if(column=="retStationName" || column == "deptStationName")
		{
			
			string str = column + " LIKE '%" + criteria + "%'";
			DBManager.AddWhere(str);
			displayedTrips = DBManager.LoadTrips();
		}
		else if(column=="distance" || column == "duration")
		{
			if (criteria.Length == 0)
				return;
			criteria = System.Text.RegularExpressions.Regex.Replace(criteria, @"s", "");
			int indexOfNumber=-1;
			for(int i = 0; i < criteria.Length; i++)
			{

				if (char.IsNumber(criteria.ToCharArray()[i]))
				{
					indexOfNumber = i;
					break;
				}
			}
			if (indexOfNumber == -1)
				return;
			float number;
			if(float.TryParse(criteria.Substring(indexOfNumber), out number) == false)
				return;
			if (column == "distance")
				number *= 1000;
			else if (column == "duration")
				number *= 60;
			string operatr = indexOfNumber > 0 ? criteria.Substring(0, indexOfNumber):"=";
			string str = column +" "+ operatr+number;
			DBManager.AddWhere(str);
			displayedTrips = DBManager.LoadTrips();
		}
	}
	private string deptName = "";
	private string retName = "";
	private string distance = "";
	private string duration = "";
	private List<Trip>? displayedTrips;
	private int currentPage = 0;
	private int pageDisplayCount = 20;
	List<string> buttonNames = new List<string> { "Departure Station", "Return Station", "Distance (km)", "Duration (min)" };
	protected override async Task OnInitializedAsync()
	{
		if (displayedTrips != null)
			return;
		ChangePage(0);
	}
	void ChangePage(int i)
	{
		currentPage = Math.Clamp(i + currentPage, 0, 1000); 
		DBManager.Limit(pageDisplayCount, currentPage);
		displayedTrips = DBManager.LoadTrips();
	}
	string GetPageString()
	{
		return ((currentPage * pageDisplayCount)+1) + " - " + ((currentPage+1) * pageDisplayCount);
	}
	void Clear()
	{
		DBManager.OrderBy(null);
		orderIndex = -1;
		buttonNames = new List<string> { "Departure Station", "Return Station", "Distance (km)", "Duration (min)" };
	}
	int orderIndex = -1;
	void OrderBy(int index)
	{
		ChangePage(-currentPage);
		displayedTrips = new List<Trip>();
		buttonNames = new List<string> { "Departure Station", "Return Station", "Distance (km)", "Duration (min)" };
		List<string> order;
		switch (index)
		{
			default:
			case 0:
				order = new List<string> { "deptStationName"};
				break;
			case 1:
				order = new List<string> { "retStationName"};
				break;
			case 2:
				order = new List<string> { "distance"};
				break;
			case 3:
				order = new List<string> { "duration"};
				break;
		}
		bool desc = DBManager.OrderBy(order);
		char c = desc ? '↓' : '↑';
		buttonNames[index] = c+" " + buttonNames[index] + " "+c;
		displayedTrips = DBManager.LoadTrips();
	}

}