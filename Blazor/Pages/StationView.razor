@page "/stationView"

<style>
	.button {
  background-color: #4CAF50; /* Green */
  border: none;
  color: white;
  padding: 8px 16px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}
.button2 {background-color: #008CBA; padding: 16px 32px;}
</style>

<PageTitle>HSL City Bike Trips 2021</PageTitle>
<h3>Station View</h3>
<select class="form-control selectpicker" @bind="fid">
<option value="" disabled selected>Select a station to view</option>
		@foreach (Station station in Station.GetAllStations())
		{
		<option value="@station.fid">@station.GetListName()</option>
		
		}
</select>
@if (fid > 0)
{

	if(selectedStation==null || fid!= selectedStation.fid){
		SetStation();
	}
	@if (selectedStation != null)
	{
		if (selectedStation.loadingInfo)
		{
			<h3>Loading more information about @selectedStation.name</h3>
			<div class="spinner"></div>
		}
		else if(selectedStation.unusedStation==false)
		{
			<table><tr><td>Filter by month</td>
					<td>@if (filterMonth != 5)
						{
							<button class="button" @onclick="()=>SetFilterMonth(5)">May</button>
						}
						else
						{
							<button class="button button2" @onclick="()=>SetFilterMonth(5)">May</button>
						}
					</td>
					<td>
						@if (filterMonth != 6)
						{
							<button class="button" @onclick="()=>SetFilterMonth(6)">June</button>
						}
						else
						{
							<button class="button button2" @onclick="()=>SetFilterMonth(6)">June</button>
						}
					</td>
					<td>
						@if (filterMonth != 7)
						{
							<button class="button" @onclick="()=>SetFilterMonth(7)">July</button>
						}
						else
						{
							<button class="button button2" @onclick="()=>SetFilterMonth(7)">July</button>
						}
					</td>
				</tr></table>
			<table>
				<tr>
					<th>Station Name</th>
					<td></td>
					<td>@selectedStation.name</td>
				</tr>
				<tr>
					<th>Station Address</th>
					<td></td>
					<td>@selectedStation.address</td>
				</tr>
				<tr>
					<th>TotalDepartures</th>
					<td></td>
					<td>@selectedStation.totalTripsFrom</td>
				</tr>
				<tr>
					<th>Total Returns</th>
					<td></td>
					<td>@selectedStation.totalTripsTo</td>
				</tr>
				<tr>
					<th>Average distance traveled after departing</th>
					<td></td>
					<td>@selectedStation.averageDistanceFrom meters</td>
				</tr>
				<tr>
					<th>Average distance traveled before returning</th>
					<td></td>
					<td>@selectedStation.averageDistanceTo meters</td>
				</tr>
			</table>
			<table class="table1">
				<tr>
					<th>Most common destination stations</th>

				</tr>
				@for (int i = 0; i < selectedStation.topStationsTo.Count; i++)
				{
					<tr><td>@(
									(i + 1).ToString()
									) --- @selectedStation.topStationsTo[i].name</td></tr>
				}
				<tr>
					<th>Most common origin stations</th>

				</tr>
				@for (int i = 0; i < selectedStation.topStationsTo.Count; i++)
				{
					<tr><td>@(
									(i + 1).ToString()
									) --- @selectedStation.topStationsFrom[i].name</td></tr>
				}
			</table>
		}
		else
		{
			<table>
				<tr>
					<th>Station Name</th>
					<td></td>
					<td>@selectedStation.name</td>
				</tr>
				<tr>
					<th>Station Address</th>
					<td></td>
					<td>@selectedStation.address</td>
				</tr>
		</table>
		<h3>Not enough trips linked to @selectedStation.name to display additional data</h3>
		}
	}
}
@code {
	int filterMonth = default;

	/// <summary>
	/// fid of the station to be viewed.
	/// </summary>
	public static int fid=0;
	Station selectedStation;

	/// <summary>
	///	Sets the selectedStation to a station with a matching <paramref name="id"/>.
	/// </summary>
	public void SetStation(int id)
	{
		fid = id;
		SetStation();
	}

	/// <summary>
	///	Sets the selectedStation according to fid and calculates the additional information (average distance etc.) about the station.
	///	<br> While calculating the page will display a loading icon.</br>
	/// </summary>
	public async void SetStation()
	{
		foreach (Station s in Station.GetAllStations())
		{
			if (s.fid == fid)
			{
				selectedStation = s;
				break;
			}
		}
		if (selectedStation != null)
		{
			await Task.Run(() => selectedStation.CalculateInfo(filterMonth));
			StateHasChanged();
		}
	}
	async void SetFilterMonth(int month)
	{
		if (month == filterMonth)
			filterMonth = default;
		else
			filterMonth = month;

		if (selectedStation != null)
		{
			await Task.Run(() => selectedStation.CalculateInfo(filterMonth));
			StateHasChanged();
		}
	}
}
